{
    "summary": "The function placeItem verifies item existence, position, and equipment before placement. It handles inventory count mismatches, saves upon success, and reports errors.",
    "details": [
        {
            "comment": "This function, placeItem, accepts three parameters: bot, name, and position. It checks if the name is a string and the position is a Vec3. If not, it throws an error. The function then verifies that there is an item with the given name and checks if it exists in the bot's inventory. If not, it notifies via chat and returns. If everything is fine, it searches for a reference block based on faceVectors, iterating through six possible vectors to find a suitable position to place the item.",
            "location": "\"/media/root/Prima/works/Voyager/docs/src/voyager/control_primitives/placeItem.js\":0-31",
            "content": "async function placeItem(bot, name, position) {\n    // return if name is not string\n    if (typeof name !== \"string\") {\n        throw new Error(`name for placeItem must be a string`);\n    }\n    // return if position is not Vec3\n    if (!(position instanceof Vec3)) {\n        throw new Error(`position for placeItem must be a Vec3`);\n    }\n    const itemByName = mcData.itemsByName[name];\n    if (!itemByName) {\n        throw new Error(`No item named ${name}`);\n    }\n    const item = bot.inventory.findInventoryItem(itemByName.id);\n    if (!item) {\n        bot.chat(`No ${name} in inventory`);\n        return;\n    }\n    const item_count = item.count;\n    // find a reference block\n    const faceVectors = [\n        new Vec3(0, 1, 0),\n        new Vec3(0, -1, 0),\n        new Vec3(1, 0, 0),\n        new Vec3(-1, 0, 0),\n        new Vec3(0, 0, 1),\n        new Vec3(0, 0, -1),\n    ];\n    let referenceBlock = null;\n    let faceVector = null;\n    for (const vector of faceVectors) {\n        const block = bot.blockAt(position.minus(vector));"
        },
        {
            "comment": "This code checks if there's a block to place an item on, then goes to the target block position, equips the item, and places it. If no block is found or placing fails too many times, it reports an error.",
            "location": "\"/media/root/Prima/works/Voyager/docs/src/voyager/control_primitives/placeItem.js\":32-61",
            "content": "        if (block?.name !== \"air\") {\n            referenceBlock = block;\n            faceVector = vector;\n            bot.chat(`Placing ${name} on ${block.name} at ${block.position}`);\n            break;\n        }\n    }\n    if (!referenceBlock) {\n        bot.chat(\n            `No block to place ${name} on. You cannot place a floating block.`\n        );\n        _placeItemFailCount++;\n        if (_placeItemFailCount > 10) {\n            throw new Error(\n                `placeItem failed too many times. You cannot place a floating block.`\n            );\n        }\n        return;\n    }\n    // You must use try catch to placeBlock\n    try {\n        // You must first go to the block position you want to place\n        await bot.pathfinder.goto(new GoalPlaceBlock(position, bot.world, {}));\n        // You must equip the item right before calling placeBlock\n        await bot.equip(item, \"hand\");\n        await bot.placeBlock(referenceBlock, faceVector);\n        bot.chat(`Placed ${name}`);\n        bot.save(`${name}_placed`);\n    } catch (err) {"
        },
        {
            "comment": "Checks if the item count in inventory matches, handles failure and displays error message, and saves when successfully placed.",
            "location": "\"/media/root/Prima/works/Voyager/docs/src/voyager/control_primitives/placeItem.js\":62-78",
            "content": "        const item = bot.inventory.findInventoryItem(itemByName.id);\n        if (item?.count === item_count) {\n            bot.chat(\n                `Error placing ${name}: ${err.message}, please find another position to place`\n            );\n            _placeItemFailCount++;\n            if (_placeItemFailCount > 10) {\n                throw new Error(\n                    `placeItem failed too many times, please find another position to place.`\n                );\n            }\n        } else {\n            bot.chat(`Placed ${name}`);\n            bot.save(`${name}_placed`);\n        }\n    }\n}"
        }
    ]
}